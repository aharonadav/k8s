pipeline {
    environment {
        ECR = '553686865554.dkr.ecr.eu-west-1.amazonaws.com/k8s_demo'
    }    
    agent {
     kubernetes {
      //cloud 'kubernetes'
      yamlFile 'KubernetesPod.yaml'
    }
  }
  stages {
      stage('Run shell') {
          steps {
            sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
            sh 'chmod u+x ./kubectl'  
            sh './kubectl get pods -n default'
          }  
      }
      stage('pull code') {
          steps {
              git branch: 'main',
                  credentialsId: 'aharon-github',
                  url: 'https://github.com/aharonadav/k8s.git'
              sh 'ls -lat'
          }
      }
      stage('Run docker') {
          steps {
              container('docker') {
                  sh 'docker build -t app1 .'
              }
          }
      }
      stage('Push to ECR') {
          steps{
              def login = ecrLogin()
              def images = ecrListImages(repositoryName: 'k8s_demo')
              //script{
              //    sh 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"'
              //    sh 'unzip awscliv2.zip'
              //    sh './aws/install'
              //    sh 'aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${env.ECR}'
              //    sh 'docker push ${env.ECR}:${BUILD_NUMBER}'
              //}
          }
      }
   }
}