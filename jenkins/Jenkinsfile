pipeline {
    environment {
        ECR = '553686865554.dkr.ecr.eu-west-1.amazonaws.com/k8s_demo'
    }    
    agent {
     kubernetes {
      //cloud 'kubernetes'
      yamlFile 'KubernetesPod.yaml'
    }
  }
  stages {
      stage('pull code') {
          steps {
              git branch: 'main',
                  credentialsId: 'aharon-github',
                  url: 'https://github.com/aharonadav/k8s.git'
              sh 'ls -lat'
          }
      }
      stage('Build and push docker') {
        steps {
            dir('deployments/app1'){
                script {
                    container('main-jnlp-slave') {
                        sh 'aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 553686865554.dkr.ecr.eu-west-1.amazonaws.com'
                        sh 'docker build -t app1 .'
                        sh "docker image tag app1:${BUILD_NUMBER} ${env.ECR}:${BUILD_NUMBER}"
                        sh "docker push ${env.ECR}:${BUILD_NUMBER}"
                    }
                }
            }
        }
      }
      stage('Helm upgrade') {
          steps {
            sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
            sh 'chmod u+x ./kubectl'  
            //sh './kubectl get pods -n default'
            sh "helm upgrade jenkins jenkins -f jenkins/values.yaml -n jenkins --set serviceAccount.version=${BUILD_NUMBER}"
          }  
      }
   }
}